'.source.chef.recipes':
  'apt_package':
    'prefix': 'apt_package'
    'body': 'apt_package \'${1:name}\' do\n  action :${2:install}\n  source \'${3:/path/to/file.deb}\'\nend'
  'apt_preference':
    'prefix': 'apt_preference'
    'body': 'apt_preference \'${1:name}\' do\n  pin \'${2:version 5.1.49-3}\'\n  action :${3:add}\nend'
  'apt_repository':
    'prefix': 'apt_repository'
    'body': 'apt_repository \'${1:nginx}\' do\n  uri \'${2:http://nginx.org/packages/ubuntu/}\'\n  components [${3:\'nginx\'}]\n  action :${4:add}\nend'
  'apt_update':
    'prefix': 'apt_update'
    'body': 'apt_update \'${1:name}\' do\n  frequency ${2:86400}\n  action :${3:periodic}\nend'
  'bash':
    'prefix': 'bash'
    'body': 'bash \'${1:a bash script}\' do\n  user \'${2:root}\'\n  cwd \'${3:/tmp}\'\n  code <<-EOH\n  ${4:wget http://www.example.com/tarball.tar.bz\n  tar -zxf tarball.tar.gz\n  cd tarball\n  ./configure\n  make\n  make install}\n  EOH\n  action :${4:run}\nend'
  'batch':
    'prefix': 'batch'
    'body': 'batch \'${1:a batch script}\' do\n  user \'${2:Administrator}\'\n  cwd \'${3:C:\\\\temp}\'\n  code <<-EOH\n  ${4:  7z.exe x C:\\\\temp\\ruby-1.8.7-p352-i386-mingw32.7z\n    -oC:\\source -r -y\n    xcopy C:\\source\\ruby-1.8.7-p352-i386-mingw32 C:\\ruby /e /y}\n    EOH\n  action :${3:run}\nend'
  'bff_package':
    'prefix': 'bff_package'
    'body': 'bff_package \'${1:name}\' do\n  source \'${2:/var/tmp/IBM_XL_C_13.1.0/usr/sys/inst.images/xlccmp.13.1.0}\'\n  action :${3:install}\nend'
  'breakpoint':
    'prefix': 'breakpoint' #check
    'body': 'breakpoint \'${1:name}\' do\n  action :${2:break}\nend'
  'cab_package':
    'prefix': 'cab_package'
    'body': 'cab_package \'${1:name}\' do\n  source \'${2:C:\\\\example.cab\}\'\n  action :${3:install}\nend'
  'chef_gem':
    'prefix': 'chef_gem'
    'body': 'chef_gem \'${1:name}\' do\n  compile_time ${2:false} \n  action :${3:install}\nend'
  'chef_handler':
    'prefix': 'chef_handler'
    'body': 'chef_handler \'${1:name_of_handler}\' do\n  source \'${2:path to source}\'\n  arguments [${3:argument1, argument2}]\n  action :${4:enable}\nend'
  'chocolatey_package':
    'prefix': 'chocolatey_package'
    'body': 'chocolatey_package \'${1:name}\' do\n  action :${3:install}\nend'
  'cookbook_file':
    'prefix': 'cookbook_file'
    'body': 'cookbook_file \'${1:/tmp/filename.md}\' do\n  source \'${2:filename.md}\'\n  owner \'${3:root}\'\n  group \'${4:root}\'\n  mode \'${5:0644}\'\n  action :${6:create}\nend'
  'cron':
    'prefix': 'cron'
    'body': 'cron \'${1:name}\' do\n  hour \'${2:5}\'\n  minute \'${3:5}\'\n  command \'${4:/bin/true}\'\n  action :${5:create}\nend'
  'csh':
    'prefix': 'csh'
    'body': 'csh \'${1:a csh script}\' do\n  user \'${2:root}\'\n  cwd \'${3:/tmp}\'\n  code <<-EOH\n  ${4:foreach i ( 10 15 20 40 )\n    echo $i\n  end}\n  EOH\n  action :${5:run}\nend'
  'directory':
    'prefix': 'directory'
    'body': 'directory \'${1:/tmp/something}\' do\n  owner \'${2:root}\'\n  group \'${3:root}\'\n  mode \'${4:0755}\'\n  recursive ${5:true}\n  action :${6:create}\nend'
  'dmg_package':
    'prefix': 'dmg_package'
    'body': 'dmg_package \'${1:name}\' do\n  source \'${2:https://packages.chef.io/files/stable/chefdk/2.5.3/mac_os_x/10.13/chefdk-2.5.3-1.dmg}\'\n  action :${3:install}\nend'
  'dnf_package':
    'prefix': 'dnf_package'
    'body': 'dnf_package \'${1:only-in-custom-repo}\' do\n  action :${2:install}\nend'
  'dpkg_package':
    'prefix': 'dpkg_package'
    'body': 'dpkg_package \'${1:name}\' do\n  source \'${2:/foo/bar/wget_1.13.4-2ubuntu1.4_amd64.deb}\'\n  action :${3:install}\nend'
  'dsc_resource':
    'prefix': 'dsc_resource'
    'body': 'dsc_resource \'${1:name}\' do\n  resource :${2:archive}\n  property :${3:ensure}, \'${4:Present}\'\n  property :${5:path} \"${6:C:\\\\Users\\\\Public\\\\Documents\\\\example.zip\}"\n  property :${7:destination} \"${8:C:\\\\Users\\\\Public\\\\Documents\\\\ExtractionPath\}"\n  action :${9:nothing}\nend'
  'dsc_script':
    'prefix': 'dsc_script'
    'body': 'dsc_script \'${1:name}\' do\n  code <<-EOH\n  ${2:}\n  EOH\n  action :${3:run}\nend'
  'execute':
    'prefix': 'execute'
    'body': 'execute \'${1:name}\' do\n  command \'${2:command}\'\n  action :${3:run}\nend'
  'file':
    'prefix': 'file'
    'body': 'file \'${1:/tmp/something}\' do\n  content \'${2:This is a placeholder}\'\n  owner \'${3:root}\'\n  group \'${4:root}\'\n  mode \'${5:0755}\'\n  action :${6:create}\nend'
  'freebsd_package':
    'prefix': 'freebsd_package'
    'body': 'freebsd_package \'${1:name}\' do\n  action :${2:install}\nend'
  'gem_package':
    'prefix': 'gem_package'
    'body': 'gem_package \'${1:gem}\' do\n  gem_binary \'${2:/opt/chef/embedded/bin/gem}\'\n  action :${3:install}\nend'
  'git':
    'prefix': 'git'
    'body': 'git \'${1:/tmp/app_name}\' do\n  repository \'${2:git@github.com/whoami/project}\'\n  reference \'${3:master}\'\n  action :${4:sync}\nend'
  'group':
    'prefix': 'group'
    'body': 'group \'${1:www-data}\' do\n  members [\'${2:maintenance}\', \'${3:clicron}\']\n  append ${4:false}\n  action :${5:create}\nend'
  'homebrew_cask':
    'prefix': 'homebrew_cask'
    'body': 'homebrew_cask \'${1:name}\' do\n  action :${2:install}\nend'
  'homebrew_package':
    'prefix': 'homebrew_package'
    'body': 'homebrew_package \'${1:name}\' do\n  action :${2:install}\nend'
  'homebrew_tap':
    'prefix': 'homebrew_tap'
    'body': 'homebrew_tap \'${1:name}\' do\n  action :${2:install}\nend'
  'hostname':
    'prefix': 'hostname'
    'body': 'hostname \'${1:name}\' do\n  action :${2:set}\nend'
  'http_request':
    'prefix': 'http_request'
    'body': 'http_request \'${1:some_message}\' do\n  url \'${2:http://example.com/check_in}\'\n  message ${3:{:some => \'data\'}.to_json}\n  action :${5:post}\nend'
  'ifconfig':
    'prefix': 'ifconfig'
    'body': 'ifconfig \'${1:192.168.0.1}\' do\n  device \'${2:eth1}\'\n  action :${3:add}\nend'
  'ips_package':
    'prefix': 'ips_package'
    'body': 'ips_package \'${1:name}\' do\n  action :${2:install}\nend'
  'ksh':
    'prefix': 'ksh'
    'body': 'ksh \'${1:name}\' do\n  code <<-EOH\n  ${2:code}\n  EOH\n  action :${3:run}\nend'
  'launchd':
    'prefix': 'launchd'
    'body': 'launchd \'${1:com.chef.every15}\' do\n  source \'${2:com.chef.every15.plist}\'\n  action :${3:create}\nend'
  'link':
    'prefix': 'link'
    'body': 'link \'${1:/tmp/passwd}\' do\n  to \'${2:/etc/passwd}\'\n  action :${3:create}\nend'
  'log':
    'prefix': 'log'
    'body': 'log \'${1:name}\' do\n  message \'${2:This is the message that will be added to the log.}\'\n  action :${3:write}\nend'
  'macos_userdefaults':
    'prefix': 'macos_userdefaults'
    'body': 'macos_userdefaults \'${1:name}\' do\n  domain \'${2:AppleKeyboardUIMode}\'\n  global ${3:true}\n  value \'${4:2}\'\n  action :${5:write}\nend'
  'macports_package':
    'prefix': 'macports_package'
    'body': 'macports_package \'${1:name}\' do\n  action :${2:install}\nend'
  'mdadm':
    'prefix': 'mdadm'
    'body': 'mdadm \'${1:/dev/md0}\' do\n  devices [ ${2:\'/dev/sda\', \'/dev/sdb\'} ]\n  level ${3:0}\n  action :${4:create} ]\nend'
  'mount':
    'prefix': 'mount'
    'body': 'mount \'${1:/mnt/volume1}\' do\n  device \'${2:volume1}\'\n  device_type :${3:label}\n  fstype \'${4:xfs}\'\n  options \'${5:rw}\'\n  action :${6:mount}\nend'
  'msu_package':
    'prefix': 'msu_package'
    'body': 'msu_package \'${1:name}\' do\n  source \'${2:C:\\\\example.msu}\'\n  action :${3:install}\nend'
  'ohai_hint':
    'prefix': 'ohai_hint'
    'body': 'ohai_hint \'${1:name}\' do\n  hint_name \'${2:custom}\'\n  content \'${3:test_content}\'\n  action :${4:create}\nend'
  'ohai':
    'prefix': 'ohai'
    'body': 'ohai \'${1:reload_passwd}\' do\n  plugin \'${2:etc}\'\n  action :${3:reload}\nend'
  'openbsd_package':
    'prefix': 'openbsd_package'
    'body': 'openbsd_package \'${1:name}\' do\n  action :${2:install}\nend'
  'openssl_dhparam':
    'prefix': 'openssl_dhparam'
    'body': 'openssl_dhparam \'${1:/etc/httpd/ssl/dhparam.pem}\' do\n  key_length ${2:4096}\n  action :${3:create}\nend'
  'openssl_rsa_private_key_file':
    'prefix': 'openssl_rsa_private_key_file'
    'body': 'openssl_rsa_private_key_file \'${1:name}\' do\n  action :${2:create}\nend'
  'openssl_rsa_public_key':
    'prefix': 'openssl_rsa_public_key'
    'body': 'openssl_rsa_public_key \'${1:/etc/example/key.pub}\' do\n  private_key_path \'${2:/etc/example/key.pem}\'\n  action :${3:install}\nend'
  'osx_profile':
    'prefix': 'osx_profile'
    'body': 'osx_profile \'${1:name}\' do\n  profile \'${2:screensaver/com.company.screensaver.mobileconfig}\'\n  action :${3:install}\nend'
  'package':
    'prefix': 'package'
    'body': 'package \'${1:tar}\' do\n  version \'${2:1.16.1-1}\'\n  action :${3:install}\nend'
  'pacman_package':
    'prefix': 'pacman_package'
    'body': 'pacman_package \'${1:name}\' do\n  action :${2:install}\nend'
  'paludis_package':
    'prefix': 'paludis_package'
    'body': 'paludis_package \'${1:name}\' do\n  action :${2:install}\nend'
  'perl':
    'prefix': 'perl'
    'body': 'perl \'${1:a perl script}\' do\n  user \'${2:root}\'\n  cwd \'${3:/tmp}\'\n  code <<-EOH\n  ${4:# hello.pl\n  #  - Displays a warm greeting\n  print \"Hello, World!\\n\";}\n  EOH\n  action :${5:run}\nend'
  'portage_package':
    'prefix': 'portage_package'
    'body': 'portage_package \'${1:name}\' do\n  action :${2:install}\nend'
  'powershell_package':
    'prefix': 'powershell_package'
    'body': 'powershell_package \'${1:xCertificate}\' do\n  version \'${2:1.1.0.0}\'\n  action :${3:install}\nend'
  'powershell_script':
    'prefix': 'powershell_script'
    'body': 'powershell_script \'${1:read-env-var}\' do\n  cwd ${2:C:\\\\temp}\n  code <<-EOH \n  ${3:$stream = [System.IO.StreamWriter] \"./test-read-env-var.txt\"\n  $stream.WriteLine(\"FOO is $env:foo\")\n  $stream.close()}\n  EOH\n  action :${3:run}\nend'
  'python':
    'prefix': 'python'
    'body': 'python \'${1:a python script}\' do\n  user \'${2:root}\'\n  cwd \'${3:/tmp}\'\n  code <<-EOH\n  ${4:print \"Hello world! From Chef and Python.\"}\n  EOH\n  action :${5:run}\nend'
  'reboot':
    'prefix': 'reboot'
    'body': 'reboot \'${1:now}\' do\n  action :${2:nothing}\n  reason \'${3:Need to reboot when the run completes successfully.}\'\n  delay_mins ${4:5}\nend'
  'registry_key':
    'prefix': 'registry_key'
    'body': 'registry_key \'${1:HKEY_LOCAL_MACHINE\\\\SOFTWARE\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\name_of_registry_key}\' do\n  values [{:name => \'${2:NewRegistryKeyValue}\', :type => :${3:string}, :data => ${4:\'C:\\\\Windows\\\\System32\\\\file_name.bmp\'}}]\n  action :${5:create}\nend'
  'remote_directory':
    'prefix': 'remote_directory'
    'body': 'remote_directory \'${1:/etc/apache2}\' do\n  source \'${2:apache2}\'\n  owner \'${3:root}\'\n  group \'${4:root}\'\n  mode \'${5:0755}\'\n  action :${6:create}\nend'
  'remote_file':
    'prefix': 'remote_file'
    'body': 'remote_file \'${1:var/www/customers/public_html/index.html}\' do\n  source \'${2:http://somesite.com/index.html}\'\n  owner \'${3:root}\'\n  group \'${4:root}\'\n  mode \'${5:0755}\'\n  action :${6:create}\nend'
  'rhsm_errata_level':
    'prefix': 'rhsm_errata_level'
    'body': 'rhsm_errata_level \'${1:example_install_moderate}\' do\n  errata_level \'${2:moderate}\'\n  action :${3:install}\nend'
  'rhsm_errata':
    'prefix': 'rhsm_errata'
    'body': 'rhsm_errata \'${1:errata-install}\' do\n  errata_id \'${2:RHSA:2018-1234}\'\n  action :${3:install}\nend'
  'rhsm_register':
    'prefix': 'rhsm_register'
    'body': 'rhsm_register \'${1:name}\' do\n  satellite_host \'${2:satellite.mycompany.com}\'\n  activation_key [ ${3:\'key1\', \'key2\'} ]\n  action :${4:register}\nend'
  'rhsm_repo':
    'prefix': 'rhsm_repo'
    'body': 'rhsm_repo \'${1:rhel-7-server-extras-rpms}\' do\n  action :${5:disable}\nend'
  'rhsm_subscription':
    'prefix': 'rhsm_subscription'
    'body': 'rhsm_subscription \'${1:name}\' do\n  action :${2:attach}\nend'
  'route':
    'prefix': 'route'
    'body': 'route \'${1:10.0.1.10/32}\' do\n  gateway \'${2:10.0.0.20}\'\n  device \'${3:eth1}\'\n  action :${4:add}\nend'
  'rpm_package':
    'prefix': 'rpm_package'
    'body': 'rpm_package \'${1:name}\' do\n  action :${2:install}\nend'
  'ruby':
    'prefix': 'ruby'
    'body': 'ruby \'${1:desc}\' do\n  cwd \'${2:/tmp}\'\n  code <<-EOH\n    ${3:mkdir -p #{extract_path\\}\n    tar xzf #{src_filename\\} -C #{extract_path\\}\n    mv #{extract_path\\}/*/* #{extract_path\\}/}\n    EOH\n  action :${4:run}\nend'
  'ruby_block':
    'prefix': 'ruby_block'
    'body': 'ruby_block \'${1:desc}\' do\n  block do\n    ${2:Chef::Config.from_file(\"/etc/chef/client.rb\")}\n  end\n  action :${3:run}\nend'
  'script':
    'prefix': 'script'
    'body': 'script \'${1:name}\' do\n  interpreter \'${2:bash}\'\n  user \'${3:root}\'\n  cwd \'${4:/tmp}\'\n  code <<-EOF\n    ${5: mkdir -p /var/www/html}\n  EOF\n  action :${6:run}\nend'
  'service':
    'prefix': 'service'
    'body': 'service \'${1:tomcat}\' do\n  supports :${2:status} => true\n  action [:${3:enable}, :${3:start}]\nend'
  'smartos_package':
    'prefix': 'smartos_package'
    'body': 'smartos_package \'${1:name}\' do\n  action :${2:install}\nend'
  'solaris_package':
    'prefix': 'solaris_package'
    'body': 'solaris_package \'${1:name}\' do\n  source \'${2:/packages_directory}\'\n  action :${3:install}\nend'
  'subversion':
    'prefix': 'subversion'
    'body': 'subversion \'${1:CouchDB Edge}\' do\n  repository \'${2:http://svn.apache.org/repos/asf/couchdb/trunk}\'\n  revision \'${3:HEAD}\'\n  destination \'${4:/opt/mysources/couch}\'\n  action :${5:sync}\nend'
  'sudo':
    'prefix': 'sudo'
    'body': 'sudo \'${1:passwordless-access}\' do\n  commands %{2:[\'systemctl restart httpd\', \'systemctl restart mysql\']}\n  nopasswd false\n  action :${3:create}\nend'
  'swap_file':
    'prefix': 'swap_file'
    'body': 'swap_file \'${1:/dev/sda1}\' do\n  size ${2:1024}\n  action :${3:create}\nend'
  'sysctl':
    'prefix': 'sysctl'
    'body': 'sysctl \'${1:name}\' do\n  value ${2:1024}\n  action :${3:apply}\nend'
  'systemd_unit':
    'prefix': 'systemd_unit'
    'body': 'systemd_unit \'${1:etcd.service}\' do\n  content(${2:Unit: {\n            Description: \'Etcd\',\n            Documentation: \'https://coreos.com/etcd\',\n            After: \'network.target\',\n          \\},\n          Service: {\n            Type: \'notify\',\n            ExecStart: \'/usr/local/etcd\',\n            Restart: \'always\',\n          \\},\n          Install: {\n            WantedBy: \'multi-user.target\',\n          \\}})\n  action :${3:create}\nend'
  'template':
    'prefix': 'template'
    'body': 'template \'${1:/tmp/config.conf}\' do\n  source \'${2:config.conf.erb}\'\n  owner \'${3:root}\'\n  group \'${4:root}\'\n  mode \'${5:0744}\'\n  action :${6:create}\nend'
  'user':
    'prefix': 'user'
    'body': 'user \'${1:random}\' do\n  comment \'${2:Random User}\'\n  uid \'${3:1000}\'\n  gid \'${4:users}\'\n  shell \'${5:/bin/bash}\'\n  action :${6:create}\nend'
  'windows_ad_join':
    'prefix': 'windows_ad_join'
    'body': 'windows_ad_join \'${1:ad.example.org}\' do\n  domain_user ${2:\'nick\'}\n  password \'${3:p@ssw0rd1}\'\n  action :${4:join}\nend'
  'windows_auto_run':
    'prefix': 'windows_auto_run'
    'body': 'windows_auto_run \'${1:BGINFO}\' do\n  program \'${2:C:/Sysinternals/bginfo.exe}\'\n  args \'${3:\'C:/Sysinternals/Config.bgi\' /NOLICPROMPT /TIMER:0}\'\n  action :${4:create}\nend'
  'windows_env':
    'prefix': 'windows_env'
    'body': 'windows_env \'${1:ComSpec}\' do\n  value \'${2:C:\\\\Windows\\\\system32\\\\cmd.exe}\'\n  action :${3:create}\nend'
  'windows_feature':
    'prefix': 'windows_feature'
    'body': 'windows_feature \'${1:DHCPServer}\' do\n  action :${2:install}\nend'
  'windows_feature_dism':
    'prefix': 'windows_feature_dism'
    'body': 'windows_feature_dism \'${1:name}\' do\n  all ${2:false}\n  source \'${3:localrepository}\'\n  action :${4:install}\nend'
  'windows_feature_powershell':
    'prefix': 'windows_feature_powershell'
    'body': 'windows_feature_powershell \'${1:name}\' do\n  all ${2:false}\n  source \'${3:localrepository}\'\n  action :${4:install}\nend'
  'windows_font':
    'prefix': 'windows_font'
    'body': 'windows_font \'${1:name}\' do\n  source \'${2:https://example.com/Custom.otf}\'\n  action :${3:install}\nend'
  'windows_package':
    'prefix': 'windows_package'
    'body': 'windows_package \'${1:name}\' do\n  action :${2:install}\nend'
  'windows_path':
    'prefix': 'windows_path'
    'body': 'windows_path \'${1:C:\\Sysinternals}\' do\n  action :${2:add}\nend'
  'windows_printer':
    'prefix': 'windows_printer'
    'body': 'windows_printer \'${1:HP LaserJet 5th Floor}\' do\n  driver_name \'${2:HP LaserJet 4100 Series PCL6}\'\n  ipv4_address \'${3:10.4.64.38}\'\n  action :${4:create}\nend'
  'windows_printer_port':
    'prefix': 'windows_printer_port'
    'body': 'windows_printer_port \'${1:10.4.64.37}\' do\n  action :${2:create}\nend'
  'windows_service':
    'prefix': 'windows_service'
    'body': 'windows_service \'${1:BITS}\' do\n  action :${2:configure_startup}\n  startup_type :${3:manual}\nend'
  'windows_shortcut':
    'prefix': 'windows_shortcut'
    'body': 'windows_shortcut \'${1:Notepad.lnk}\' do\n  description \'${2:Launch Notepad}\'\n  target \'${3:C:\\Windows\\notepad.exe}\'\n  iconlocation \'${4:C:\\Windows\\notepad.exe,0}\'\n  action :${5:create}\nend'
  'windows_task':
    'prefix': 'windows_task'
    'body': 'windows_task \'${1:chef-client}\' do\n  command \'${2:chef-client}\'\n  run_level :${3:highest}\n  frequency \'${4:weekly}\'\n  frequency_modifier ${5:2}\n  day ${6:Mon, Fri}\n  action :${7:create}\nend'
  'yum_package':
    'prefix': 'yum_package'
    'body': 'yum_package \'${1:wget}\' do\n  source \'${2:/foo/bar/wget_1.13.4-2ubuntu1.4_amd64.deb}\'\n  action :${3:install}\nend'
  'yum_repository':
    'prefix': 'yum_repository'
    'body': 'yum_repository \'${1:name}\' do\n  description \'Zenoss Stable repo\'\n  baseurl \'http://dev.zenoss.com/yum/stable/\'\n  gpgkey \'http://dev.zenoss.com/yum/RPM-GPG-KEY-zenoss\'\n  action :${2:create}\nend'
  'zypper_package':
    'prefix': 'zypper_package'
    'body': 'zypper_package \'${1:name}\' do\n  action :${3:install}\nend'
  'zypper_repository':
    'prefix': 'zypper_repository'
    'body': 'zypper_repository \'${1:Packman}\' do\n  baseurl \'http://packman.inode.at\'\n  path \'/suse/openSUSE_Leap_42.3\'\n  action :${3:add}\nend'
